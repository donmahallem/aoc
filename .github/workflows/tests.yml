name: Test
on:
  push:
  pull_request:
  merge_group:

permissions:
  contents: write
  deployments: write
jobs:
  test_go:
    name: Run and Test GO
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./go

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v main.go
      - name: Test with the Go CLI
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Benchmark Go
        if: github.ref == 'refs/heads/main'
        run: go test ./... -bench . | tee output.txt
      - name: Store benchmark result
        if: github.ref == 'refs/heads/main'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Go Benchmark
          tool: "go"
          output-file-path: ./go/output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
  test_python:
    name: Run and Test Python
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./python
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Generate Report
        run: |
          pip install -r requirements.txt
          pip install -r requirements_test.txt
          coverage run --source=. -m unittest discover
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  test_cpp:
    name: Run and Test CPP
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cpp
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Build
        run: |
          make all
